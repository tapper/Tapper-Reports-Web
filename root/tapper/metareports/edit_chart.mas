<%args>
    $chart
    $columns
    $error      => q##
</%args>

<%method single_axis_element>
    <%args>
        $axis
        $axis_element
        $show_add_image
    </%args>

%   if ( $show_add_image ) {
        <img class="add_chart_axis_<% $axis %>_elements" src="/tapper/static/images/plus.png" />
%   }
%   else {
        <img class="delete_chart_axis_elements" src="/tapper/static/images/minus.png" />
%   }
    <input class="axis_element_input accolumn" name="chart_axis_<% $axis %>_column" value="<% $axis_element %>" />

</%method>

<%method single_restricted_value>
    <%args>
        $restricted_value
        $show_add_image
    </%args>

%   if ( $show_add_image ) {
        <img class="add_restict_value" src="/tapper/static/images/plus.png" />
%   }
%   else {
        <img class="delete_restict_value" src="/tapper/static/images/minus.png" />
%   }
    <input class="restricted_value_input" name="chart_line_where_value" value="<% $restricted_value %>" />

</%method>

<%method single_additional_line>
    <%args>
        $additional_column
        $additional_url     => ''
    </%args>

    <tr>
        <td><img src="/tapper/static/images/minus.png" class="delete_additional" /></td>
        <td>
            <font  class="stext">Additional column</font>
            <font  class="stext durltext">Display url ( $value$ - additional column value )</font>

            <br />

            <input type="text" name="chart_additional_column" class="accolumn half" value="<% $additional_column || q## %>" />
            <input type="text" name="chart_additional_url" class="half optional" value="<% $additional_url || q## %>" />
        </td>
    </tr>

</%method>

<%method single_where_line>
    <%args>
        $where_line
    </%args>

    <tr>
        <td>
            <img src="/tapper/static/images/minus.png" class="delete_where" />
            <select name="chart_line_where_operator" class="bench_operator">
                <& /tapper/selects/benchmark_operators.mas, benchmark_operator => $where_line->[0] &>
            </select>
        </td>
        <td>
            <font  class="stext">Restricted column</font><br />
            <input class="accolumn" name="chart_line_where_column" value="<% $where_line->[1] || '' %>" />
            <font  class="stext">Restricted value(s)</font><br />
%           my $i_restrict_value_counter = 0;
%           if ( $where_line->[2] ) {
%               for my $s_value ( @{$where_line}[2..$#{$where_line}] ) {
                    <& SELF:single_restricted_value, restricted_value => $s_value, show_add_image => !$i_restrict_value_counter &>
%                   $i_restrict_value_counter++;
%               }
%           }
%           else {
%               $i_restrict_value_counter = 1;
                <& SELF:single_restricted_value, restricted_value => '', show_add_image => 1 &>
%           }
            <input type="hidden" name="chart_line_where_counter" value="<% $i_restrict_value_counter %>" />
        </td>
    </tr>

</%method>

<%method single_chart_line>
    <%args>
        $chart_line
        $show_add_image
    </%args>

    <table class="chart_line">
        <tr>
            <td colspan="2" class="header">
%               if ( $show_add_image ) {
                    <img src="/tapper/static/images/plus.png" id="idx_add_chart_line" />
                    Add a new chart line
%               }
%               else {
                    <img src="/tapper/static/images/minus.png" class="delete_line" />
                    Delete this chart line
%               }
            </td>
        </tr>
        <tr>
            <td class="bold">Name of chart line:</td>
            <td><input type="text" name="chart_line_name" value="<% $chart_line->{chart_line_name} || '' %>" /></td>
        </tr>
        <tr>
            <td class="bold">Columns x-axis:</td>
            <td>
                <div class="column_concat"></div>
                <input type="hidden" name="chart_axis_x_counter" value="<% $chart_line->{chart_line_x_column} ? scalar( @{$chart_line->{chart_line_x_column}} ) : 1 %>" />
%               if ( $chart_line->{chart_line_x_column} ) {
%                   my $i_counter = 0;
%                   for my $ar_chart_axis_element ( @{$chart_line->{chart_line_x_column}} ) {
                        <& SELF:single_axis_element, axis => 'x', axis_element => $ar_chart_axis_element->[1], show_add_image => !$i_counter++ &>
%                   }
%               }
%               else {
                    <& SELF:single_axis_element, axis => 'x', axis_element => q##, show_add_image => 1 &>
%               }
            </td>
        </tr>
        <tr class="axis_format_x<% $chart_line->{chart_line_x_format} ? '' : ' hideit' | n %>">
            <td class="bold">Format x-axis:</td>
            <td><input type="text" name="chart_axis_x_format" value="<% $chart_line->{chart_line_x_format} || '' %>" /></td>
        </tr>
        <tr>
            <td class="bold">Columns y-axis:</td>
            <td>
                <div class="column_concat"></div>
                <input type="hidden" name="chart_axis_y_counter" value="<% $chart_line->{chart_line_y_column} ? scalar( @{$chart_line->{chart_line_y_column}} ) : 1 %>" />
%               if ( $chart_line->{chart_line_y_column} ) {
%                   my $i_counter = 0;
%                   for my $ar_chart_axis_element ( @{$chart_line->{chart_line_y_column}} ) {
                        <& SELF:single_axis_element, axis => 'y', axis_element => $ar_chart_axis_element->[1], show_add_image => !$i_counter++ &>
%                   }
%               }
%               else {
                    <& SELF:single_axis_element, axis => 'y', axis_element => q##, show_add_image => 1 &>
%               }
            </td>
        </tr>
        <tr class="axis_format_y<% $chart_line->{chart_line_y_format} ? '' : ' hideit' | n %>">
            <td class="bold">Format y-axis:</td>
            <td><input type="text" name="chart_axis_y_format" value="<% $chart_line->{chart_line_y_format} || '' %>" /></td>
        </tr>
        <tr>
            <td colspan="2" class="header">
                <img src="/tapper/static/images/plus.png" class="add_where" />
                Add a new result restriction
            </td>
        </tr>
%       my $i_chart_where_counter = 0;
%       if ( $chart_line->{chart_line_statement}{where} && @{$chart_line->{chart_line_statement}{where}} ) {
%           for my $ar_where_line ( @{$chart_line->{chart_line_statement}{where}} ) {
                <& SELF:single_where_line, where_line => $ar_where_line &>
%               $i_chart_where_counter = $i_chart_where_counter + 1;
%           }
%       }
        <tr>
            <td colspan="2" class="header">
                <img src="/tapper/static/images/plus.png" class="add_addcol" />
                Add additional column data
            </td>
        </tr>
%       my $i_chart_additional_counter = 0;
%       for my $hr_additional ( @{$chart_line->{chart_line_additionals}} ) {
            <& SELF:single_additional_line, additional_column => $hr_additional->{column}, additional_url => $hr_additional->{url} &>
%           $i_chart_additional_counter = $i_chart_additional_counter + 1;
%       }
    </table>

    <input type="hidden" name="chart_where_counter" value="<% $i_chart_where_counter %>" />
    <input type="hidden" name="chart_additional_counter" value="<% $i_chart_additional_counter %>" />

</%method>

<%method order_by_options>
    <%args>
        $order_by
    </%args>
%   for my $ar_element ([0,'auto'],[1,'1st'],[2,'2nd']) {
%       if ( $order_by == $ar_element->[0] ) {
            <option value="<% $ar_element->[0] %>" selected><% $ar_element->[1] %></option>
%       }
%       else {
            <option value="<% $ar_element->[0] %>"><% $ar_element->[1] %></option>
%       }
%   }
</%method>

<style type="text/css">

    #idx_div_errors {
        font-weight: bold;
        color: red;
    }
    #idx_div_save {
        background-color: #bebebe;
        border: 1px solid #585858;
        margin-top: 5px;
        width: 514px;
        height: 20px;
        padding: 2px;
    }
    #idx_div_save input {
        width: 515px;
    }
    #idx_div_errors ul {
        list-style-type: disc;
    }
    table {
        border-collapse: collapse;
        width: 520px;
    }
    table input {
        width: 362px;
    }
    table input.half {
        width: 176px;
    }
    table select {
        width: 370px;
    }
    table img {
        border: none;
        margin-bottom: -2px;
        cursor: pointer;
    }
    table.chart_line {
        margin-top: 5px;
    }
    table tr td:first-child {
        width: 130px;
        vertical-align: top;
    }
    td {
        background-color: #d3d3d3;
        border: 1px solid #585858;
        padding: 2px;
    }
    div.column_concat {
        margin: 2px;
        text-align: center;
    }
    select.bench_operator {
        width: 100px;
    }
    img.add_restict_value {
        margin-right: 3px;
    }
    input.axis_element_input,
    input.restricted_value_input {
        width: 343px;
    }
    .bold {
        font-weight: bold;
    }
    .hideit {
        display: none;
    }
    .header {
        background-color: #bebebe;
        font-weight: bold;
    }
    .stext {
        font-size: 8px;
        margin-left: 5px;
    }
    .stext.durltext {
        margin-left: 127px;
    }
    .redborder {
        border-color: red;
    }
    .redfont {
        color: red;
    }

</style>

<a href="/tapper/metareports?owner_id=<% $c->req->params->{owner_id} %>">&laquo; back to overview</a>

<br /><br />

<div id="idx_div_errors"><% $error %></div>
<div id="idx_helper_div">
    <form id="idx_create_chart_form" action="/tapper/metareports/save_chart">
        <input type="hidden" name="asnew" value="<% $c->req->params->{asnew} || 0 %>" />
        <input type="hidden" name="chart_id" value="<% $c->req->params->{asnew} ? q## : $chart->{chart_id} || q## %>" />
        <input type="hidden" name="owner_id" value="<% $c->req->params->{owner_id} || q## %>" />
        <input type="hidden" id="idx_path" value="<% $c->req->path %>" />

        <table lass="chart">
            <tr>
                <td colspan="2" class="header">Create a new chart</td>
            </tr>
            <tr>
                <td class="bold">Chart name:</td>
                <td><input name="chart_name" id="idx_input_chart_name" type="text" value="<% $chart->{chart_name} || q## %>" /></td>
            </tr>
            <tr>
                <td class="bold">Chart type:</td>
                <td>
                    <select name="chart_type">
                        <& /tapper/selects/chart_types.mas, chart_type => $chart->{chart_type_id} || q## &>
                    </select>
                </td>
            </tr>
            <tr>
                <td class="bold">Chart x-axis type:</td>
                <td>
                    <select name="chart_axis_type_x" id="idx_sl_axis_type_x">
                        <& /tapper/selects/chart_axis_types.mas, chart_axis_type => $chart->{chart_axis_type_x_id} || q## &>
                    </select>
                </td>
            </tr>
            <tr>
                <td class="bold">Chart y-axis type:</td>
                <td>
                    <select name="chart_axis_type_y" id="idx_sl_axis_type_y">
                        <& /tapper/selects/chart_axis_types.mas, chart_axis_type => $chart->{chart_axis_type_y_id} || q## &>
                    </select>
                </td>
            </tr>
            <tr>
                <td class="bold">Sort x-axis:</td>
                <td>
                    <select name="order_by_x_axis" id="idx_order_by_x_sel">
                        <& SELF:order_by_options, order_by => $chart->{order_by_x_axis} &>
                    </select>
                </td>
            </tr>
            <tr>
                <td class="bold">Sort y-axis:</td>
                <td>
                    <select name="order_by_y_axis" id="idx_order_by_y_sel">
                        <& SELF:order_by_options, order_by => $chart->{order_by_y_axis} &>
                    </select>
                </td>
            </tr>
        </table>

%       my $chart_line_counter = 0;
%       if ( $chart->{chart_lines} ) {
%           for my $hr_chart_line ( @{$chart->{chart_lines}} ) {
                <&
                    SELF:single_chart_line,
                    show_add_image  => !$chart_line_counter,
                    chart_line      => {
                        chart_line_name         => $hr_chart_line->{chart_line_name},
                        chart_line_statement    => $hr_chart_line->{chart_line_statement},
                        chart_line_additionals  => [ map { { column => $_->{chart_line_additional_column}, url => $_->{chart_line_additional_url}, } } @{$hr_chart_line->{chart_additionals}}  ],
                        chart_line_x_column     => $hr_chart_line->{chart_line_x_column},
                        chart_line_x_format     => $hr_chart_line->{chart_line_x_format},
                        chart_line_y_column     => $hr_chart_line->{chart_line_y_column},
                        chart_line_y_format     => $hr_chart_line->{chart_line_y_format},
                    }
                &>
%               $chart_line_counter = $chart_line_counter + 1;
%           }
%       }
%       else {
            <& SELF:single_chart_line, show_add_image  => !$chart_line_counter, chart_line => {} &>
%           $chart_line_counter = $chart_line_counter + 1;
%       }

        <div id="idx_div_save"><input type="button" value="Save" /></div>

    </form>

</div>

<link rel="stylesheet" type="text/css" href="/tapper/static/css/jquery-ui/jquery.ui.css" />
<script language="JavaScript"  type="text/javascript" src="/tapper/static/js/jquery-ui/jquery-ui-autocomplete.js"></script>
<script type="text/javascript">

%   my $s_chart_line     =  $m->scomp("SELF:single_chart_line", show_add_image => 0, chart_line => {}, %ARGS );
%      $s_chart_line     =~ s/^\s+|\s+$//gm;
%      $s_chart_line     =~ s/\n//g;
%   my $s_where_line     =  $m->scomp("SELF:single_where_line", where_line => [], %ARGS );
%      $s_where_line     =~ s/^\s+|\s+$//gm;
%      $s_where_line     =~ s/\n//g;
%   my $s_addit_line     =  $m->scomp("SELF:single_additional_line", additional_column => '', %ARGS );
%      $s_addit_line     =~ s/^\s+|\s+$//gm;
%      $s_addit_line     =~ s/\n//g;
%   my $s_restrict_value =  $m->scomp("SELF:single_restricted_value", restricted_value => '', show_add_image => 0, %ARGS );
%      $s_restrict_value =~ s/^\s+|\s+$//gm;
%      $s_restrict_value =~ s/\n//g;
%   my $s_line_element_x =  $m->scomp("SELF:single_axis_element", axis => 'x', axis_element => '', show_add_image => 0, %ARGS );
%      $s_line_element_x =~ s/^\s+|\s+$//gm;
%      $s_line_element_x =~ s/\n//g;
%   my $s_line_element_y =  $m->scomp("SELF:single_axis_element", axis => 'y', axis_element => '', show_add_image => 0, %ARGS );
%      $s_line_element_y =~ s/^\s+|\s+$//gm;
%      $s_line_element_y =~ s/\n//g;
%   my $s_column_list = 'var column_list = ["' . (join '","', @{$columns}) . '"]';
    <% $s_column_list | n %>

    var acoptions = {
        source: column_list,
        change: function(){
            if ( (/^\s*$/).test( $(this).val() ) ) {
                $(this).css('background-color','#ffffff').attr('found',false);
            }
            else if ( $.inArray( $(this).val(), acoptions.source ) != -1 ) {
                $(this).css('background-color','#d3ffce').attr('found',true);
            }
            else {
                $(this).css('background-color','#fffad0').attr('found',false);
            }
            $(this).closest('td').find('div.column_concat').text(
                $.map( $(this).closest('td').find('input.axis_element_input'), function( a ){
                    return $(a).attr('found') == 'true' ? '{'+$(a).val()+'}' : $(a).val();
                }).join('')
            );
        }
    };

    $(document).ready(function(){
        $('input.accolumn')
            .autocomplete(acoptions)
            .keyup(acoptions.change)
            .keyup()
        ;
        $('#idx_order_by_x_sel,#idx_order_by_y_sel').change(function(){
            var $other = $(this).attr('id') == 'idx_order_by_x_sel'
                ? $('#idx_order_by_y_sel') : $('#idx_order_by_x_sel')
            ;
            if ( $(this).val() != 0 && $(this).val() == $other.val() ) {
                $other.find('option[value="' + ($(this).val() == 1 ? 2 : 1) + '"]')[0].selected = true;
            }
            if ( $(this).val() == 0 && $other.val() == 2 ) {
                $other.find('option[value="1"]')[0].selected = true;
            }
            else if ( $(this).val() == 2 && $other.val() == 0 ) {
                $(this).find('option[value="1"]')[0].selected = true;
            }
        });
        $('#idx_sl_axis_type_x').change(function(){
            if ( $(this).find('option:selected').text() == 'date' ) {
                $('table.chart_line tr.axis_format_x.hideit').removeClass('hideit');
            }
            else {
                $('table.chart_line tr.axis_format_x:not(.hideit)').addClass('hideit');
            }
        });
        $('#idx_sl_axis_type_y').change(function(){
            if ( $(this).find('option:selected').text() == 'date' ) {
                $('table.chart_line tr.axis_format_y.hideit').removeClass('hideit');
            }
            else {
                $('table.chart_line tr.axis_format_y:not(.hideit)').addClass('hideit');
            }
        });
        $('#idx_helper_div').click(function( e ){
            var $target  = $(e.target);
            if ( $target.prop("tagName") == 'IMG' ) {
                if ( $target.attr('id') == 'idx_add_chart_line' ) {
                    $('#idx_div_save').before('<% $s_chart_line | n %>');
                    $(this).find('table:last input.accolumn').autocomplete(acoptions).keyup(acoptions.change);
                    $('#idx_sl_axis_type_x').change();
                    $('#idx_sl_axis_type_y').change();
                }
                else if ( $target.hasClass('delete_additional') ) {
                    var $counter = $target.closest('table').nextAll("[name='chart_additional_counter']:first");
                        $counter.val( $counter.val() - 1 );
                    $target.closest('tr').remove();
                }
                else if ( $target.hasClass('delete_where') ) {
                    var $counter = $target.closest('table').nextAll("[name='chart_where_counter']:first");
                        $counter.val( $counter.val() - 1 );
                    $target.closest('tr').remove();
                }
                else if ( $target.hasClass('delete_line') ) {
                    $target.closest('table').next().remove().end().next().remove().end().remove();
                }
                else if ( $target.hasClass('delete_restict_value') ) {
                    var $counter = $target.closest('td').find('input[name="chart_line_where_counter"]');
                        $counter.val( $counter.val() - 1 );
                    $target.next().remove().end().remove();
                }
                else if ( $target.hasClass('delete_chart_axis_elements') ) {
                    var $counter = $target.closest('td').find('input:hidden:first');
                        $counter.val( $counter.val() - 1 );
                    $target.nextUntil('img').add($target).remove();
                }
                else if ( $target.hasClass('add_chart_axis_x_elements') ) {
                    var $counter = $target.closest('td').find('input:hidden:first');
                        $counter.val( ( $counter.val() * 1 ) + 1 );
                    $target.closest('td').append('<% $s_line_element_x | n %>').find('img:last').css('margin-right','3px');
                    $target.closest('td').find('input.accolumn').autocomplete(acoptions).keyup(acoptions.change);
                }
                else if ( $target.hasClass('add_chart_axis_y_elements') ) {
                    var $counter = $target.closest('td').find('input:hidden:first');
                        $counter.val( ( $counter.val() * 1 ) + 1 );
                    $target.closest('td').append('<% $s_line_element_y | n %>').find('img:last').css('margin-right','3px');
                    $target.closest('td').find('input.accolumn').autocomplete(acoptions).keyup(acoptions.change);
                }
                else if ( $target.hasClass('add_where') ) {
                    $target.closest('table').find('img.add_addcol').closest('tr').before('<% $s_where_line | n %>');
                    $target.closest('table').find('img.add_addcol').closest('tr').prev().find('input.accolumn').autocomplete(acoptions).keyup(acoptions.change);
                    var $counter = $target.closest('table').nextAll("[name='chart_where_counter']:first");
                        $counter.val( ( $counter.val() * 1 ) + 1 );
                }
                else if ( $target.hasClass('add_addcol') ) {
                    $target.closest('table').find('tr:last').after('<% $s_addit_line | n %>');
                    $target.closest('table').find('tr:last input.accolumn').autocomplete(acoptions).keyup(acoptions.change);
                    var $counter = $target.closest('table').nextAll("[name='chart_additional_counter']:first");
                        $counter.val( ( $counter.val() * 1 ) + 1 );
                }
                else if ( $target.hasClass('add_restict_value') ) {
                    $target.closest('td').append('<% $s_restrict_value | n %>');
                    var $counter = $target.closest('td').find('input[name="chart_line_where_counter"]');
                        $counter.val( ( $counter.val() * 1 ) + 1 );
                }
            }
        });

        $('#idx_div_save input').click(function(){

            $('#idx_div_errors').text('');
            var $inputs = $('input:visible:not(.optional)')
                .removeClass('redborder')
                .filter(function(){ return (/^\s*$/).test( $(this).val() ) })
                .addClass('redborder')
                .first()
                    .focus()
                .end()
            ;

            var errors = [];
            if ( $inputs.length > 0 ) {
                errors.push( 'missing input field values found' );
            }

            var $selects = $('select.bench_operator')
                .removeClass('redfont')
                .filter(function(){
                    return $(this).val() != '=' && $(this).val() != '!=' && $(this).closest('td').next().find('input[name="chart_line_where_counter"]').val() != 1;
                })
                .addClass('redfont')
                .first()
                    .focus()
                .end()
            ;

            if ( $selects.length > 0 ) {
                errors.push( 'multiple "restricted value(s)" just allowed for operators "=" and "!="' )
            }

            if ( errors.length > 0 ) {
                var error_html = '';
                for ( var i = 0; i < errors.length; i = i + 1 ) {
                    error_html += "<li>" + errors[i] + "</li>";
                }
                $('#idx_div_errors').html("<ul>" + error_html + "</ul>");
            }
            else {
                $('#idx_create_chart_form').submit();
            }
        });

        // call for edit mode
        $('#idx_sl_axis_type_x').change();
        $('#idx_sl_axis_type_y').change();

    });

</script>